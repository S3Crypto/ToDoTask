{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Action types\nexport var SET_TODOS = 'SET_TODOS';\nexport var ADD_TODO = \"ADD_TODO\";\nexport var TOGGLE_TODO = \"TOGGLE_TODO\"; // Action creators\n\nexport var getTodos = function getTodos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/Todos');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              dispatch(setTodos(data));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var setTodos = function setTodos(todos) {\n  return {\n    type: SET_TODOS,\n    payload: todos\n  };\n};\nexport var addTodo = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(description) {\n    var data, response, newTodo;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = {\n              description: description\n            };\n            console.log(\"Sending data:\", data);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return fetch('/path-to-api', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n\n          case 5:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error('Failed to add todo');\n\n          case 8:\n            _context2.next = 10;\n            return response.json();\n\n          case 10:\n            newTodo = _context2.sent;\n            dispatch({\n              type: ADD_TODO,\n              payload: newTodo\n            });\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.error(\"Error:\", _context2.t0); // Handle the error in the UI\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 14]]);\n  }));\n\n  return function addTodo(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var toggleTodo = function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id: id\n    }\n  };\n};","map":{"version":3,"names":["SET_TODOS","ADD_TODO","TOGGLE_TODO","getTodos","dispatch","fetch","response","json","data","setTodos","todos","type","payload","addTodo","description","console","log","method","headers","body","JSON","stringify","ok","Error","newTodo","error","toggleTodo","id"],"sources":["/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/src/actions/todosActions.js"],"sourcesContent":["// Action types\nexport const SET_TODOS = 'SET_TODOS';\nexport const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\n\n// Action creators\nexport const getTodos = () => {\n    return async dispatch => {\n        const response = await fetch('/Todos');\n        const data = await response.json();\n        dispatch(setTodos(data));\n    };\n};\n\nexport const setTodos = (todos) => ({\n    type: SET_TODOS,\n    payload: todos\n});\n\nexport const addTodo = async (description) => {\n    const data = {\n        description: description\n    };\n\n    console.log(\"Sending data:\", data);\n\n    try {\n        const response = await fetch('/path-to-api', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to add todo');\n        }\n\n        const newTodo = await response.json();\n        dispatch({\n            type: ADD_TODO,\n            payload: newTodo\n        });\n\n    } catch (error) {\n        console.error(\"Error:\", error);\n        // Handle the error in the UI\n    }\n};\n\nexport const toggleTodo = (id) => ({\n    type: TOGGLE_TODO,\n    payload: { id }\n});\n"],"mappings":";;AAAA;AACA,OAAO,IAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB,C,CAEP;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAC1B;IAAA,sEAAO,iBAAMC,QAAN;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACoBC,KAAK,CAAC,QAAD,CADzB;;YAAA;cACGC,QADH;cAAA;cAAA,OAEgBA,QAAQ,CAACC,IAAT,EAFhB;;YAAA;cAEGC,IAFH;cAGHJ,QAAQ,CAACK,QAAQ,CAACD,IAAD,CAAT,CAAR;;YAHG;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAP;;IAAA;MAAA;IAAA;EAAA;AAKH,CANM;AAQP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;EAAA,OAAY;IAChCC,IAAI,EAAEX,SAD0B;IAEhCY,OAAO,EAAEF;EAFuB,CAAZ;AAAA,CAAjB;AAKP,OAAO,IAAMG,OAAO;EAAA,uEAAG,kBAAOC,WAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YACbN,IADa,GACN;cACTM,WAAW,EAAEA;YADJ,CADM;YAKnBC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,IAA7B;YALmB;YAAA;YAAA,OAQQH,KAAK,CAAC,cAAD,EAAiB;cACzCY,MAAM,EAAE,MADiC;cAEzCC,OAAO,EAAE;gBACL,gBAAgB;cADX,CAFgC;cAKzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;YALmC,CAAjB,CARb;;UAAA;YAQTF,QARS;;YAAA,IAgBVA,QAAQ,CAACgB,EAhBC;cAAA;cAAA;YAAA;;YAAA,MAiBL,IAAIC,KAAJ,CAAU,oBAAV,CAjBK;;UAAA;YAAA;YAAA,OAoBOjB,QAAQ,CAACC,IAAT,EApBP;;UAAA;YAoBTiB,OApBS;YAqBfpB,QAAQ,CAAC;cACLO,IAAI,EAAEV,QADD;cAELW,OAAO,EAAEY;YAFJ,CAAD,CAAR;YArBe;YAAA;;UAAA;YAAA;YAAA;YA2BfT,OAAO,CAACU,KAAR,CAAc,QAAd,gBA3Be,CA4Bf;;UA5Be;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAPZ,OAAO;IAAA;EAAA;AAAA,GAAb;AAgCP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;EAAA,OAAS;IAC/BhB,IAAI,EAAET,WADyB;IAE/BU,OAAO,EAAE;MAAEe,EAAE,EAAFA;IAAF;EAFsB,CAAT;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}