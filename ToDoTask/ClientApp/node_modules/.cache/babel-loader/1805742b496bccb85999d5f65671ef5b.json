{"ast":null,"code":"import _slicedToArray from \"/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/src/components/AddTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../actions/todosActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTodo() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTodo = _useState2[0],\n      setNewTodo = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!newTodo.trim()) {\n      setError(\"Failed to get newTodo\");\n      return;\n    }\n\n    if (newTodo.trim()) {\n      console.log(newTodo);\n      dispatch(addTodo({\n        title: newTodo\n      }));\n      setNewTodo('');\n    }\n\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: function onChange(e) {\n          return setNewTodo(e.target.value);\n        },\n        placeholder: \"Enter new todo\",\n        onBlur: function onBlur() {\n          if (!newTodo.trim()) {\n            setError(\"Description cannot be empty\");\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTodo, \"1NoYBgxiH1vAR5Jqy6bYjzpkkzU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useDispatch","addTodo","AddTodo","newTodo","setNewTodo","error","setError","dispatch","handleSubmit","e","preventDefault","trim","console","log","title","color","target","value"],"sources":["/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/src/components/AddTodo.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../actions/todosActions';\n\nfunction AddTodo() {\n    const [newTodo, setNewTodo] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!newTodo.trim()) {\n            setError(\"Failed to get newTodo\");\n            return;\n        }\n        if (newTodo.trim()) {\n            console.log(newTodo)\n            dispatch(addTodo({ title: newTodo }));\n            setNewTodo('');\n        }\n        setError(null);\n    };\n\n    return (\n        <div>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={newTodo}\n                    onChange={(e) => setNewTodo(e.target.value)}\n                    placeholder=\"Enter new todo\"\n                    onBlur={() => {\n                        if (!newTodo.trim()) {\n                            setError(\"Description cannot be empty\");\n                        }\n                    }}\n                />\n                <button type=\"submit\">Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddTodo;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACf,gBAA8BH,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOI,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA0BL,QAAQ,CAAgB,IAAhB,CAAlC;EAAA;EAAA,IAAOM,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;;EAEA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAwB;IACzCA,CAAC,CAACC,cAAF;;IACA,IAAI,CAACP,OAAO,CAACQ,IAAR,EAAL,EAAqB;MACjBL,QAAQ,CAAC,uBAAD,CAAR;MACA;IACH;;IACD,IAAIH,OAAO,CAACQ,IAAR,EAAJ,EAAoB;MAChBC,OAAO,CAACC,GAAR,CAAYV,OAAZ;MACAI,QAAQ,CAACN,OAAO,CAAC;QAAEa,KAAK,EAAEX;MAAT,CAAD,CAAR,CAAR;MACAC,UAAU,CAAC,EAAD,CAAV;IACH;;IACDE,QAAQ,CAAC,IAAD,CAAR;EACH,CAZD;;EAcA,oBACI;IAAA,WACKD,KAAK,iBAAI;MAAG,KAAK,EAAE;QAAEU,KAAK,EAAE;MAAT,CAAV;MAAA,UAA6BV;IAA7B;MAAA;MAAA;MAAA;IAAA,QADd,eAEI;MAAM,QAAQ,EAAEG,YAAhB;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,KAAK,EAAEL,OAFX;QAGI,QAAQ,EAAE,kBAACM,CAAD;UAAA,OAAOL,UAAU,CAACK,CAAC,CAACO,MAAF,CAASC,KAAV,CAAjB;QAAA,CAHd;QAII,WAAW,EAAC,gBAJhB;QAKI,MAAM,EAAE,kBAAM;UACV,IAAI,CAACd,OAAO,CAACQ,IAAR,EAAL,EAAqB;YACjBL,QAAQ,CAAC,6BAAD,CAAR;UACH;QACJ;MATL;QAAA;QAAA;QAAA;MAAA,QADJ,eAYI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAtCQJ,O;UAGYF,W;;;KAHZE,O;AAwCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}