{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Action types\nexport var SET_TODOS = 'SET_TODOS';\nexport var ADD_TODO = \"ADD_TODO\";\nexport var TOGGLE_TODO = \"TOGGLE_TODO\";\nexport var ADD_TODO_ERROR = 'ADD_TODO_ERROR'; // Action creators\n\nexport var getTodos = function getTodos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/Todos');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              dispatch(setTodos(data));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var setTodos = function setTodos(todos) {\n  return {\n    type: SET_TODOS,\n    payload: todos\n  };\n};\nexport var addTodo = function addTodo(content) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('/todos', {\n                method: 'POST',\n                body: JSON.stringify(content),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 3:\n              response = _context2.sent;\n\n              if (response.ok) {\n                _context2.next = 6;\n                break;\n              }\n\n              throw new Error('Network response was not ok');\n\n            case 6:\n              _context2.next = 8;\n              return response.json();\n\n            case 8:\n              data = _context2.sent;\n              dispatch({\n                type: ADD_TODO,\n                payload: data\n              });\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('There was a problem with the fetch operation:', _context2.t0.message);\n              dispatch({\n                type: ADD_TODO_ERROR,\n                payload: _context2.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var toggleTodo = function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id: id\n    }\n  };\n};","map":{"version":3,"names":["SET_TODOS","ADD_TODO","TOGGLE_TODO","ADD_TODO_ERROR","getTodos","dispatch","fetch","response","json","data","setTodos","todos","type","payload","addTodo","content","method","body","JSON","stringify","headers","ok","Error","console","error","message","toggleTodo","id"],"sources":["/Users/michaeldarlington/ToDoTask/ToDoTask/ClientApp/src/actions/todosActions.js"],"sourcesContent":["\n\n// Action types\nexport const SET_TODOS = 'SET_TODOS';\nexport const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const ADD_TODO_ERROR = 'ADD_TODO_ERROR';\n\n// Action creators\nexport const getTodos = () => {\n    return async dispatch => {\n        const response = await fetch('/Todos');\n        const data = await response.json();\n        dispatch(setTodos(data));\n    };\n};\n\nexport const setTodos = (todos) => ({\n    type: SET_TODOS,\n    payload: todos\n});\n\nexport const addTodo = (content) => {\n    return async dispatch => {\n        try {\n            const response = await fetch('/todos', {\n                method: 'POST',\n                body: JSON.stringify(content),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n\n            dispatch({\n                type: ADD_TODO,\n                payload: data\n            });\n        } catch (error) {\n            console.error('There was a problem with the fetch operation:', error.message);\n\n            dispatch({\n                type: ADD_TODO_ERROR,\n                payload: error.message\n            });\n        }\n    }\n};\n\nexport const toggleTodo = (id) => ({\n    type: TOGGLE_TODO,\n    payload: { id }\n});\n"],"mappings":";;AAEA;AACA,OAAO,IAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAC1B;IAAA,sEAAO,iBAAMC,QAAN;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACoBC,KAAK,CAAC,QAAD,CADzB;;YAAA;cACGC,QADH;cAAA;cAAA,OAEgBA,QAAQ,CAACC,IAAT,EAFhB;;YAAA;cAEGC,IAFH;cAGHJ,QAAQ,CAACK,QAAQ,CAACD,IAAD,CAAT,CAAR;;YAHG;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAP;;IAAA;MAAA;IAAA;EAAA;AAKH,CANM;AAQP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;EAAA,OAAY;IAChCC,IAAI,EAAEZ,SAD0B;IAEhCa,OAAO,EAAEF;EAFuB,CAAZ;AAAA,CAAjB;AAKP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAa;EAChC;IAAA,uEAAO,kBAAMV,QAAN;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEwBC,KAAK,CAAC,QAAD,EAAW;gBACnCU,MAAM,EAAE,MAD2B;gBAEnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAF6B;gBAGnCK,OAAO,EAAE;kBACL,gBAAgB;gBADX;cAH0B,CAAX,CAF7B;;YAAA;cAEOb,QAFP;;cAAA,IAUMA,QAAQ,CAACc,EAVf;gBAAA;gBAAA;cAAA;;cAAA,MAWW,IAAIC,KAAJ,CAAU,6BAAV,CAXX;;YAAA;cAAA;cAAA,OAcoBf,QAAQ,CAACC,IAAT,EAdpB;;YAAA;cAcOC,IAdP;cAgBCJ,QAAQ,CAAC;gBACLO,IAAI,EAAEX,QADD;gBAELY,OAAO,EAAEJ;cAFJ,CAAD,CAAR;cAhBD;cAAA;;YAAA;cAAA;cAAA;cAqBCc,OAAO,CAACC,KAAR,CAAc,+CAAd,EAA+D,aAAMC,OAArE;cAEApB,QAAQ,CAAC;gBACLO,IAAI,EAAET,cADD;gBAELU,OAAO,EAAE,aAAMY;cAFV,CAAD,CAAR;;YAvBD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAP;;IAAA;MAAA;IAAA;EAAA;AA6BH,CA9BM;AAgCP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;EAAA,OAAS;IAC/Bf,IAAI,EAAEV,WADyB;IAE/BW,OAAO,EAAE;MAAEc,EAAE,EAAFA;IAAF;EAFsB,CAAT;AAAA,CAAnB"},"metadata":{},"sourceType":"module"}