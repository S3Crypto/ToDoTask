{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaeldarlington/Projects/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/michaeldarlington/Projects/ToDoTask/ToDoTask/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Action types\nexport var SET_TODOS = 'SET_TODOS'; // Action creators\n\nexport var setTodos = function setTodos(todos) {\n  return {\n    type: SET_TODOS,\n    payload: todos\n  };\n};\nexport var getTodos = function getTodos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/Todos');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              dispatch(setTodos(data));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["SET_TODOS","setTodos","todos","type","payload","getTodos","dispatch","fetch","response","json","data"],"sources":["/Users/michaeldarlington/Projects/ToDoTask/ToDoTask/ClientApp/src/actions/todosActions.js"],"sourcesContent":["// Action types\nexport const SET_TODOS = 'SET_TODOS';\n\n// Action creators\nexport const setTodos = (todos) => ({\n    type: SET_TODOS,\n    payload: todos\n});\n\nexport const getTodos = () => {\n    return async dispatch => {\n        // Fetch data from the backend API (change the endpoint if necessary)\n        const response = await fetch('/Todos');\n        const data = await response.json();\n        dispatch(setTodos(data));\n    };\n};\n"],"mappings":";;AAAA;AACA,OAAO,IAAMA,SAAS,GAAG,WAAlB,C,CAEP;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;EAAA,OAAY;IAChCC,IAAI,EAAEH,SAD0B;IAEhCI,OAAO,EAAEF;EAFuB,CAAZ;AAAA,CAAjB;AAKP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAC1B;IAAA,sEAAO,iBAAMC,QAAN;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAEoBC,KAAK,CAAC,QAAD,CAFzB;;YAAA;cAEGC,QAFH;cAAA;cAAA,OAGgBA,QAAQ,CAACC,IAAT,EAHhB;;YAAA;cAGGC,IAHH;cAIHJ,QAAQ,CAACL,QAAQ,CAACS,IAAD,CAAT,CAAR;;YAJG;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAP;;IAAA;MAAA;IAAA;EAAA;AAMH,CAPM"},"metadata":{},"sourceType":"module"}